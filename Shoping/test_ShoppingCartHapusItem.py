# ********RoostGPT********
"""
Test generated by RoostGPT for test python-oop-test using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=hapus_item_ba34e340e6
ROOST_METHOD_SIG_HASH=hapus_item_3704d929a1


Scenario 1: Test the removal of an existing product from the shopping cart
Details:
  TestName: test_remove_existing_product
  Description: This test is intended to verify that the function is able to remove an existing product from the shopping cart successfully.
Execution:
  Arrange: Instantiate the ShoppingCart class with a name and add a product to the shopping cart.
  Act: Invoke the hapus_item function with the name of the product added to the cart.
  Assert: Check whether the product is removed from the shopping cart.
Validation:
  The ability to remove an item from the cart is a basic functionality of a shopping cart. This test will ensure that the function is able to perform this operation correctly.

Scenario 2: Test the removal of a non-existing product from the shopping cart
Details:
  TestName: test_remove_non_existing_product
  Description: This test is intended to verify that the function does not throw an error when trying to remove a product that does not exist in the shopping cart.
Execution:
  Arrange: Instantiate the ShoppingCart class with a name and add a product to the shopping cart.
  Act: Invoke the hapus_item function with a product name that does not exist in the cart.
  Assert: Check whether the shopping cart remains the same without any changes.
Validation:
  In real-world scenarios, there might be cases where a user tries to remove a product that is not in the cart. This test will ensure that the function can handle such scenarios gracefully without causing any errors or exceptions.

Scenario 3: Test the removal of a product from an empty shopping cart
Details:
  TestName: test_remove_product_from_empty_cart
  Description: This test is intended to verify that the function does not throw an error when trying to remove a product from an empty shopping cart.
Execution:
  Arrange: Instantiate the ShoppingCart class with a name without adding any products to the shopping cart.
  Act: Invoke the hapus_item function with a product name.
  Assert: Check whether the shopping cart remains empty.
Validation:
  There might be cases where a user tries to remove a product from an empty cart. This test will ensure that the function can handle such scenarios gracefully without causing any errors or exceptions.
"""

# ********RoostGPT********
import pytest
from Contoh import ShoppingCart

class Test_ShoppingCartHapusItem:
    @pytest.mark.regression
    def test_remove_existing_product(self):
        # Arrange
        cart = ShoppingCart('Customer1')
        cart.tambah_item('Laptop Acer', 1200, 2)
        
        # Act
        cart.hapus_item('Laptop Acer')
        
        # Assert
        assert 'Laptop Acer' not in [item['produk'] for item in cart.keranjang]
        
    @pytest.mark.regression
    def test_remove_non_existing_product(self):
        # Arrange
        cart = ShoppingCart('Customer1')
        cart.tambah_item('Laptop Acer', 1200, 2)
        
        # Act
        cart.hapus_item('Monitor LG 19inch')
        
        # Assert
        assert len(cart.keranjang) == 1
        assert 'Laptop Acer' in [item['produk'] for item in cart.keranjang]

    @pytest.mark.regression
    def test_remove_product_from_empty_cart(self):
        # Arrange
        cart = ShoppingCart('Customer1')
        
        # Act
        cart.hapus_item('Laptop Acer')
        
        # Assert
        assert len(cart.keranjang) == 0
