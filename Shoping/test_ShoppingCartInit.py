# ********RoostGPT********
"""
Test generated by RoostGPT for test python-oop-test using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=__init___12a141ef6e
ROOST_METHOD_SIG_HASH=__init___a2f985d7bb


```
Scenario 1: Test if the __init__ method correctly assigns nama_pembeli to the ShoppingCart object
Details:
  TestName: test_init_assigns_nama_pembeli
  Description: This test is intended to verify if the __init__ method correctly assigns the nama_pembeli variable to the ShoppingCart object. The business logic here is that each ShoppingCart object should have a unique nama_pembeli, and this should be assigned correctly at the time of object creation.
Execution:
  Arrange: Create a variable nama_pembeli with a string value.
  Act: Instantiate the ShoppingCart object with the nama_pembeli variable.
  Assert: Check if the nama_pembeli of the ShoppingCart object matches the original nama_pembeli variable.
Validation:
  This test is important to ensure that the ShoppingCart object is correctly initialized with the provided nama_pembeli. This is a fundamental requirement of the ShoppingCart class and is crucial for the correct functioning of the application.

Scenario 2: Test if the __init__ method handles empty nama_pembeli
Details:
  TestName: test_init_with_empty_nama_pembeli
  Description: This test is intended to verify how the __init__ method handles an empty string as the nama_pembeli. The business logic here is that the ShoppingCart object should be able to handle an empty nama_pembeli and not throw any errors.
Execution:
  Arrange: Create a variable nama_pembeli with an empty string value.
  Act: Instantiate the ShoppingCart object with the nama_pembeli variable.
  Assert: Check if the nama_pembeli of the ShoppingCart object matches the empty string.
Validation:
  This test is important to ensure that the ShoppingCart object can handle edge cases like an empty nama_pembeli. This is crucial for the robustness of the application.

Scenario 3: Test if the __init__ method handles non-string nama_pembeli
Details:
  TestName: test_init_with_non_string_nama_pembeli
  Description: This test is intended to verify how the __init__ method handles a non-string value as the nama_pembeli. The business logic here is that the ShoppingCart object should be able to handle a non-string nama_pembeli and not throw any errors.
Execution:
  Arrange: Create a variable nama_pembeli with a non-string value.
  Act: Instantiate the ShoppingCart object with the nama_pembeli variable.
  Assert: Check if the nama_pembeli of the ShoppingCart object matches the original non-string nama_pembeli.
Validation:
  This test is important to ensure that the ShoppingCart object can handle edge cases like a non-string nama_pembeli. This is crucial for the robustness of the application, especially considering Python's dynamic typing.
```
"""

# ********RoostGPT********
import pytest
from Contoh import ShoppingCart

class Test_ShoppingCartInit:
    def test_init_assigns_nama_pembeli(self):
        nama_pembeli = "John"
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli, "nama_pembeli not correctly assigned to ShoppingCart object"

    def test_init_with_empty_nama_pembeli(self):
        nama_pembeli = ""
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli, "ShoppingCart object cannot handle empty nama_pembeli"

    def test_init_with_non_string_nama_pembeli(self):
        nama_pembeli = 1234
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli, "ShoppingCart object cannot handle non-string nama_pembeli"
