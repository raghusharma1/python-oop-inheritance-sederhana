# ********RoostGPT********
"""
Test generated by RoostGPT for test python-oop-test using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=__init___12a141ef6e
ROOST_METHOD_SIG_HASH=__init___a2f985d7bb


Scenario 1: Testing for correct assignment of nama_pembeli
Details:
  TestName: test_init_assigns_nama_pembeli_correctly
  Description: This test is intended to verify that the __init__ method correctly assigns the variable nama_pembeli.
Execution:
  Arrange: Instantiate a ShoppingCart object with a test nama_pembeli string.
  Act: Check the nama_pembeli attribute of the instantiated ShoppingCart object.
  Assert: Verify that the nama_pembeli attribute matches the test string passed during instantiation.
Validation:
  This test is important to ensure that the ShoppingCart constructor is working correctly and assigns the nama_pembeli attribute as expected. The expected result is directly tied to the function's specifications and the requirements of the ShoppingCart class.

Scenario 2: Testing for empty string nama_pembeli
Details:
  TestName: test_init_with_empty_nama_pembeli
  Description: This test is intended to verify that the __init__ method can handle an empty string as the nama_pembeli.
Execution:
  Arrange: Instantiate a ShoppingCart object with an empty string for nama_pembeli.
  Act: Check the nama_pembeli attribute of the instantiated ShoppingCart object.
  Assert: Verify that the nama_pembeli attribute is an empty string.
Validation:
  This test helps to check the robustness of the constructor method. The expected result is directly tied to the function's specifications and the requirements of the ShoppingCart class.

Scenario 3: Testing for non-string nama_pembeli
Details:
  TestName: test_init_with_non_string_nama_pembeli
  Description: This test is intended to verify that the __init__ method behaves as expected when passed a non-string nama_pembeli.
Execution:
  Arrange: Instantiate a ShoppingCart object with a non-string input for nama_pembeli.
  Act: Check the type of the nama_pembeli attribute of the instantiated ShoppingCart object.
  Assert: Verify that the nama_pembeli attribute is a string, indicating that the constructor method correctly handled the non-string input.
Validation:
  This test is important to ensure that the ShoppingCart constructor can handle a variety of input types and always stores the nama_pembeli attribute as a string, per the class's requirements. The expected result is directly tied to the function's specifications and the requirements of the ShoppingCart class.
"""

# ********RoostGPT********
import pytest
from Contoh import ShoppingCart

class Test_ShoppingCartInit:
    @pytest.mark.positive
    def test_init_assigns_nama_pembeli_correctly(self):
        test_nama_pembeli = "TestUser"
        cart = ShoppingCart(test_nama_pembeli)
        assert cart.nama_pembeli == test_nama_pembeli

    @pytest.mark.negative
    def test_init_with_empty_nama_pembeli(self):
        test_nama_pembeli = ""
        cart = ShoppingCart(test_nama_pembeli)
        assert cart.nama_pembeli == test_nama_pembeli

    @pytest.mark.negative
    def test_init_with_non_string_nama_pembeli(self):
        test_nama_pembeli = 123
        cart = ShoppingCart(test_nama_pembeli)
        assert isinstance(cart.nama_pembeli, str)
