# ********RoostGPT********
"""
Test generated by RoostGPT for test python-oop-test using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=__init___12a141ef6e
ROOST_METHOD_SIG_HASH=__init___a2f985d7bb


```
Scenario 1: Test the initialization of the ShoppingCart class with a valid nama_pembeli
Details:
  TestName: test_ShoppingCart_init_with_valid_nama_pembeli
  Description: This test is intended to verify that the ShoppingCart class is properly initialized with a valid nama_pembeli.
Execution:
  Arrange: No setup is required as we are testing the initialization.
  Act: Instantiate the ShoppingCart class with a valid nama_pembeli.
  Assert: Check if the nama_pembeli attribute of the ShoppingCart instance is equal to the provided nama_pembeli.
Validation:
  This test is important to ensure that the ShoppingCart class is properly initialized with the provided nama_pembeli. This is crucial for the business logic as the nama_pembeli is a key attribute of the ShoppingCart class.

Scenario 2: Test the initialization of the ShoppingCart class with an empty nama_pembeli
Details:
  TestName: test_ShoppingCart_init_with_empty_nama_pembeli
  Description: This test is intended to verify that the ShoppingCart class handles the initialization with an empty nama_pembeli correctly.
Execution:
  Arrange: No setup is required as we are testing the initialization.
  Act: Instantiate the ShoppingCart class with an empty nama_pembeli.
  Assert: Check if the nama_pembeli attribute of the ShoppingCart instance is an empty string.
Validation:
  This test is important to ensure that the ShoppingCart class can handle the case of an empty nama_pembeli. This is crucial for the business logic as the nama_pembeli is a required attribute of the ShoppingCart class.

Scenario 3: Test the initialization of the ShoppingCart class with a nama_pembeli that contains special characters
Details:
  TestName: test_ShoppingCart_init_with_special_character_nama_pembeli
  Description: This test is intended to verify that the ShoppingCart class handles the initialization with a nama_pembeli that contains special characters correctly.
Execution:
  Arrange: No setup is required as we are testing the initialization.
  Act: Instantiate the ShoppingCart class with a nama_pembeli that contains special characters.
  Assert: Check if the nama_pembeli attribute of the ShoppingCart instance is equal to the provided nama_pembeli.
Validation:
  This test is important to ensure that the ShoppingCart class can handle the case of a nama_pembeli that contains special characters. This is crucial for the business logic as the nama_pembeli is a required attribute of the ShoppingCart class and it may contain special characters in real-world scenarios.
```
"""

# ********RoostGPT********
import pytest
from Contoh import ShoppingCart

class Test_ShoppingCartInit:

    @pytest.mark.valid
    def test_ShoppingCart_init_with_valid_nama_pembeli(self):
        nama_pembeli = 'John Doe'
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli

    @pytest.mark.invalid
    def test_ShoppingCart_init_with_empty_nama_pembeli(self):
        nama_pembeli = ''
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli

    @pytest.mark.valid
    def test_ShoppingCart_init_with_special_character_nama_pembeli(self):
        nama_pembeli = '@John_Doe!'
        cart = ShoppingCart(nama_pembeli)
        assert cart.nama_pembeli == nama_pembeli
